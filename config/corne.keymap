/*
 * Copyright (c) 2020 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 *
 * Corne V3 QWERTZ Layout - Adaptiert von Glove80
 * Fokus: Schnelles, intuitives Tippen mit Home Row Mods
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
// #include <dt-bindings/zmk/rgb.h> // Entfernt, da kein RGB
#include <dt-bindings/zmk/outputs.h>

// Definitionen für Layer-Namen (optional, aber hilfreich für Lesbarkeit)
#define DEF 0 // Default Layer
#define SYM 1 // Symbol Layer (ehemals lower_layer aus deinem Corne Code)
#define NAV 2 // Navigations-/Funktions-Layer (ehemals raise_layer aus deinem Corne Code)
#define SYS 3 // System Layer (Bluetooth, Reset etc.)

/ {
    behaviors {
        // Double-tap Backspace für Wort löschen
        td_bspc: tap_dance_backspace {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp BSPC>, <&kp LC(BSPC)>;
        };
        
        // Home Row Mods - Halte-Funktionen
        hm_a: homerow_mod_a { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; tapping-term-ms = <200>; quick-tap-ms = <150>; flavor = "tap-preferred"; bindings = <&kp LGUI>, <&kp A>; };
        hm_s: homerow_mod_s { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; tapping-term-ms = <200>; quick-tap-ms = <150>; flavor = "tap-preferred"; bindings = <&kp LALT>, <&kp S>; };
        hm_d: homerow_mod_d { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; tapping-term-ms = <200>; quick-tap-ms = <150>; flavor = "tap-preferred"; bindings = <&kp LCTRL>, <&kp D>; };
        hm_f: homerow_mod_f { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; tapping-term-ms = <200>; quick-tap-ms = <150>; flavor = "tap-preferred"; bindings = <&kp LSHFT>, <&kp F>; };

        hm_j: homerow_mod_j { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; tapping-term-ms = <200>; quick-tap-ms = <150>; flavor = "tap-preferred"; bindings = <&kp RSHFT>, <&kp J>; };
        hm_k: homerow_mod_k { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; tapping-term-ms = <200>; quick-tap-ms = <150>; flavor = "tap-preferred"; bindings = <&kp RCTRL>, <&kp K>; };
        hm_l: homerow_mod_l { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; tapping-term-ms = <200>; quick-tap-ms = <150>; flavor = "tap-preferred"; bindings = <&kp RALT>, <&kp L>; };
        hm_ouml: homerow_mod_ouml { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; tapping-term-ms = <200>; quick-tap-ms = <150>; flavor = "tap-preferred"; bindings = <&kp RGUI>, <&kp O>; }; // Ö als Beispiel, da SEMI in Glove80 RGUI war

        // Layer-Tap für Daumen
        lt_sym: layer_tap_symbol { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; tapping-term-ms = <200>; quick-tap-ms = <150>; flavor = "tap-preferred"; bindings = <&mo SYM>, <&kp SPACE>;}; // Halten für SYM Layer, Tippen für SPACE
        lt_nav: layer_tap_nav { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; tapping-term-ms = <200>; quick-tap-ms = <150>; flavor = "tap-preferred"; bindings = <&mo NAV>, <&kp RET>;};   // Halten für NAV Layer, Tippen für ENTER
    };

    macros {
        m_sudo: macro_sudo { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp S &kp U &kp D &kp O &kp SPACE>; };
        m_cd: macro_cd { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp C &kp D &kp SPACE>; };
        m_ls: macro_ls { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp L &kp S &kp SPACE &kp MINUS &kp L &kp A &kp SPACE>; };
        m_git: macro_git { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp G &kp I &kp T &kp SPACE>; };
        m_pipe: macro_pipe { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp SPACE &kp PIPE &kp SPACE>; };
        m_and: macro_and { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp SPACE &kp AMPS &kp AMPS &kp SPACE>; };
        m_arrow: macro_arrow { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp MINUS &kp GT>; };
        m_dquote: macro_dquote { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp DQT &kp DQT &kp LEFT>; };
        m_squote: macro_squote { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp SQT &kp SQT &kp LEFT>; };
    };

    combos {
        compatible = "zmk,combos";
        combo_sys_layer {
            timeout-ms = <50>;
            key-positions = <31 40>; // Beispiel: die beiden äußeren Daumentasten
            bindings = <&to SYS>;
            layers = <DEF SYM NAV>; // Combo funktioniert auf diesen Layern
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer { // Layer 0: QWERTZ Base mit Home Row Mods
            bindings = <
            // Linke Hälfte
            &kp TAB      &kp Q        &kp W         &kp E         &kp R         &kp T
            &kp LCTRL    &hm_a        &hm_s         &hm_d         &hm_f         &kp G
            &kp LSHFT    &kp Z        &kp X         &kp C         &kp V         &kp B
                                      &kp LGUI      &lt_sym       &kp LALT // Thumb: GUI, Space/SYM, LALT

            // Rechte Hälfte
            &kp Z        &kp U        &kp I         &kp O         &kp P         &td_bspc // Z ist Y auf QWERTZ
            &kp H        &hm_j        &hm_k         &hm_l         &hm_ouml      &kp SQT  // Ö als Beispiel für SEMI/RGUI
            &kp N        &kp M        &kp COMMA     &kp DOT       &kp MINUS     &kp RSHFT // MINUS statt FSLH für QWERTZ Bindestrich
                         &kp RCTRL    &lt_nav       &kp RGUI                 // Thumb: RCTRL, Enter/NAV, RGUI
            >;
        };

        symbol_layer { // Layer 1: Symbole & Zahlen - angepasst von Glove80, Fokus auf Coding
            bindings = <
            // Linke Hälfte
            &kp ESC      &kp N1       &kp N2        &kp N3        &kp N4        &kp N5
            &trans       &kp EXCL     &kp AT        &kp HASH      &kp DLLR      &kp PRCNT
            &trans       &kp TILDE    &kp GRAVE     &kp LC(Z)     &kp LC(V)     &kp LC(B)      // LC(Z) = Undo
                                      &trans        &trans        &trans

            // Rechte Hälfte
            &kp N6       &kp N7       &kp N8        &kp N9        &kp N0        &kp PLUS
            &kp CARET    &kp AMPS     &kp ASTRK     &kp LPAR      &kp RPAR      &kp BSLH
            &trans       &kp LBRC     &kp RBRC      &kp LBKT      &kp RBKT      &kp PIPE       // {} [] |
                         &trans       &trans        &trans
            >;
        };

        navigation_layer { // Layer 2: Navigation, F-Tasten & Macros - angepasst von Glove80
            bindings = <
            // Linke Hälfte
            &kp F1       &kp F2       &kp F3        &kp F4        &kp F5        &kp F6
            &trans       &m_sudo      &m_cd         &m_git        &m_ls         &m_pipe
            &trans       &kp LC(X)    &kp LC(C)     &kp LC(V)     &trans        &trans         // Cut, Copy, Paste
                                      &trans        &trans        &trans

            // Rechte Hälfte
            &kp F7       &kp F8       &kp F9        &kp F10       &kp F11       &kp F12
            &m_and       &kp LEFT     &kp DOWN      &kp UP        &kp RIGHT     &kp DEL
            &m_arrow     &kp HOME     &kp PG_DN     &kp PG_UP     &kp END       &trans
                         &trans       &trans        &trans
            >;
        };

        system_layer { // Layer 3: System-Funktionen (Bluetooth, Reset)
            bindings = <
            // Linke Hälfte
            &out OUT_USB &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
            &trans       &trans       &trans        &trans        &trans        &trans
            &trans       &trans       &trans        &trans        &trans        &bt BT_CLR_ALL
                                      &bootloader   &sys_reset    &trans // ACHTUNG: Reset-Tasten!

            // Rechte Hälfte
            &trans       &trans       &trans        &trans        &trans        &trans
            &trans       &trans       &trans        &trans        &trans        &trans
            &trans       &trans       &trans        &trans        &trans        &trans
                         &trans       &trans        &trans
            >;
        };
    };
};
